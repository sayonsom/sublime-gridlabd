clock{ 
     timezone EST+5EDT;
     starttime '2019-07-10 00:00:00'; 
     stoptime '2019-07-11 00:00:00'; 
}

module tape; 

module powerflow { 
    solver_method NR; 
    default_maximum_voltage_error 1e-6;
};

module residential {
    implicit_enduses LIGHTS; 
};

module generators;

// ADDING CLIMATE DATA 
// ================

// module climate;

// object csv_reader {
//      name model_csv_reader;
//      filename "weather_data.csv";
// };


// object climate {
//    // Note:  TMY2 files do not support DST. Hence TMY3 files downloaded from NREL website as CSV files are preferred.
//    // tmyfile "CA-Sacramento.tmy2"; 
//       reader model_csv_reader;
//       name model_climate;
//       tmyfile "weather_data.csv";
     
// };

// --------------------




// CO-SIMULATION
// ================
// ~ delete the following if not doing HELICS co-simulation
// module communication;

// object helics_msg {
//    name ;
//    config ;
// };


// NODES 
// ================

object node {
    name feeder_head;
    bustype SWING;
    phases ABCN;
    nominal_voltage 7200;
}

object node {
    name n1;
    phases ABC;
    nominal_voltage 7200.0;  // line-to-neutral voltage, i,e. line-line volt/sqrt(3)
}

object node {
    name n2;
    phases ABC;
    nominal_voltage 7200.0;  // line-to-neutral voltage, i,e. line-line volt/sqrt(3)
}

object node {
    name n3;
    phases ABC;
    nominal_voltage 7200.0;  // line-to-neutral voltage, i,e. line-line volt/sqrt(3)
}




// LINE CONFIGURATIONS
// ===================
// ~ remember to delete the unused configurations, they clutter the code 
//
// Default Overhead Lines
// -------------------------

 object line_configuration {
    name default_oh_line_configuration;
    conductor_A default_overhead_conductor;
    conductor_B default_overhead_conductor;
    conductor_C default_overhead_conductor;
    conductor_N default_overhead_conductor_neutral;
    spacing default_oh_line_spacing;
}

object overhead_line_conductor {
    name default_overhead_conductor;
    geometric_mean_radius .00446;
    resistance 1.12;
}

object overhead_line_conductor {
    name default_overhead_conductor_neutral;
    geometric_mean_radius .00446;
    resistance 1.12;
}

object line_spacing {
    name default_oh_line_spacing;
    distance_AB 2.5;
    distance_BC 4.5;
    distance_AC 7.0;
    distance_AN 5.656854;
    distance_BN 4.272002;
    distance_CN 5.0;
}


// Default Triplex Lines
// -------------------------


object triplex_line_configuration {
    name default_triplex_line_configuration;
    conductor_1 default_triplex_conductor; 
    conductor_2 default_triplex_conductor; 
    conductor_N default_triplex_conductor; 
    insulation_thickness 0.08; 
    diameter 0.522; 
}

object triplex_line_conductor: { 
    name default_triplex_conductor; 
    resistance 0.48; 
    geometric_mean_radius 0.0158; 
}



// LINES
// ======


object overhead_line {
    name oh_line_1;
    phases ABC;
    from feeder_head;
    to n1;
    length 10;
    configuration default_oh_line_configuration;
}


object overhead_line {
    name oh_line_2;
    phases ABC;
    from n1;
    to n2;
    length 120;
    configuration default_oh_line_configuration;
}


object overhead_line {
    name oh_line_3;
    phases ABC;
    from n2;
    to n3;
    length 120;
    configuration default_oh_line_configuration;
}


// New Feeder Branch

object transformer {
     name xmfr_1;
     phases AS; // Options - AS, BS, CS
     from n3; // Can be a three phase node
     to secondary_meter; // name of the triplex meter connecting the customer
     configuration xmfr_config;
}

object transformer_configuration {
     name xmfr_config;
     connect_type SINGLE_PHASE_CENTER_TAPPED; // Options - 
     install_type PADMOUNT; // Options - POLETOP (cheaper), VAULT (for building)
     primary_voltage 7200 V;
     secondary_voltage 120 V; 
     power_rating 50;
     powerA_rating 50; // make sure to match the A, B, C phase, default is A
     impedance 0.015+0.0675j;
}

object triplex_meter {
     // this meter can also be replaced with a triplex_node
     name secondary_meter;
     phases AS; // Options - AS, BS, CS, Same as transformer above
     nominal_voltage 120.00;
}
object triplex_line {
     name sample_load_tl;
     from secondary_meter; // Same as triplex meter name above
     to customer_meter;
     phases AS; // Options - AS, BS, CS, Same as transformer above
     length 10;
     configuration default_triplex_line_configuration;
}
object triplex_meter {
     name customer_meter; // Same as "to" in triplex_line above
     phases AS;  // Options - AS, BS, CS, Same as transformer above
     nominal_voltage 120.00;
}


object house {
  name my_house;
  parent customer_meter; // meter name from above
  floor_area 1500; 
  // schedule_skew 3600; // shifting the normal appliance schedule by these many seconds

  heating_system_type HEAT_PUMP;
  heating_COP 3.0;
  heating_setpoint 65;

  cooling_system_type ELECTRIC;
  cooling_setpoint 74;

  thermal_integrity_level VERY_GOOD; // UNKNOWN, VERY_GOOD, GOOD, ABOVE_NORMAL, NORMAL, BELOW_NORMAL, LITTLE, VERY_LITTLE
  air_temperature 70;
  mass_temperature 70;
  cooling_COP 2.6;
}

object ZIPload {
  name zipload_;
  parent my_house; // same house name as the house to which the ZIP Load is to be connected
  base_power 2; // kW  Base real power of the total load at nominal voltage
  // schedule_skew 7200;
  heatgain_fraction 0.9;
  power_pf 1.000;
  current_pf 1.000;
  impedance_pf 1.000;
  impedance_fraction 0.300000;
  current_fraction 0.300000;
  power_fraction 0.400000;
}  


// Multi-Recorder
// --------------

object multi_recorder{
    name save_data;
    file simple_feeder_records.csv;
    interval 3600;
    property customer_meter:measured_real_energy; 
}
    